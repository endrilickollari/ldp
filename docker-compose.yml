version: '3.8'

services:
  # Redis service for Celery broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PostgreSQL database (optional, can switch from SQLite)
  # Uncomment if you want to use PostgreSQL instead of SQLite
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: ldp
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # FastAPI web application
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./app.db
      # For PostgreSQL (uncomment if using PostgreSQL):
      # - DATABASE_URL=postgresql://postgres:password@db:5432/ldp
    env_file:
      - .env
    volumes:
      - ./app.db:/app/app.db  # Mount SQLite database
      - ./uploads:/app/uploads  # Mount uploads directory if it exists
    depends_on:
      - redis
      # - db  # Uncomment if using PostgreSQL
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery worker for background tasks
  worker:
    build: .
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./app.db
      # For PostgreSQL (uncomment if using PostgreSQL):
      # - DATABASE_URL=postgresql://postgres:password@db:5432/ldp
    env_file:
      - .env
    volumes:
      - ./app.db:/app/app.db  # Mount SQLite database
      - ./uploads:/app/uploads  # Mount uploads directory if it exists
    depends_on:
      - redis
      # - db  # Uncomment if using PostgreSQL
    command: celery -A workers.celery_app worker --loglevel=info

  # Celery Flower for monitoring (optional)
  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - redis
    command: celery -A workers.celery_app flower --port=5555

volumes:
  redis_data:
  # postgres_data:  # Uncomment if using PostgreSQL
